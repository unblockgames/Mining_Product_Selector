{"version":3,"sources":["miners.jsx","components/Radio.jsx","components/step1.jsx","components/radio.jsx","components/step2.jsx","pdus.js","panels.js","components/step3.jsx","components/calculator.jsx","App.js","reportWebVitals.js","index.js"],"names":["miners","name","plugType","plugQty","minerWatts","getMiner","filter","m","PlugQty","props","RadioButtonGroup","direction","options","label","value","onChange","e","PlugType","Step1","error","selectedMiner","handleChange","selectMiner","handleSubmit","Fragment","Box","justify","id","align","width","TextInput","className","Divider","orientation","Select","_","map","dropHeight","Button","primary","style","margin","size","onClick","Service","pad","Step2","errors","minerQty","serviceString","serviceAmps","height","pdus","displayName","maxAmps","cost","shopifyId","specSheetUrl","image","plugs","c19","c13","getPdus","panels","input","maxVoltage","phase","wire","output","continuousAmps","continuousSinglePhaseAmps","maxSinglePhaseAmps","p","count","getPanels","getPanel","panelName","handleAddToCart","qty","urlBase","window","open","focus","Step3","log","panelsToDisplay","pdusToDisplay","includes","panel","numberOfPanels","push","servicePhase","serviceVoltage","numberOfPdus","Infinity","Grid","columns","gap","pdu","Card","console","CardHeader","class","CardBody","Image","alignSelf","src","Heading","level","Text","toFixed","toLocaleString","undefined","pduCost","Math","floor","numberOfMinersPerPdu","splitters","CardFooter","type","wrap","replaceAll","numberOfMinersPerPanel","Calculator","sqrt3","state","step","electricalBudget","serviceIDK","totalPower","singlePhaseAmps","schemaStep1","Joi","object","number","integer","required","schemaStep2","string","messages","schemaStep3","xhttp","XMLHttpRequest","setRequestHeader","send","JSON","stringify","a","target","setState","option","validate","calculate","details","path","message","serviceArray","split","parseInt","calculateSinglePhaseAmps","ceil","result","calculatePdu","result2","calculatePanel","numberOfMinersPerPduPowerwise","numberOfMinersPerPduPlugwise","potentialAdditionalMinersPerPdu","panelsNeededByPduCount","panelsNeededByPower","numberOfMinersTemp1","numberOfMinersTemp2","this","round","border","color","side","general","React","Component","theme","global","font","family","App","Grommet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"js/main.2dc1bd36.chunk.js","sourcesContent":["const miners = [\n  {\n    name: \"BitFury B8\",\n    plugType: \"C19\",\n    plugQty: \"2\",\n    minerWatts: \"6400\",\n  },\n\n  {\n    name: \"AntMiner D3\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"1200\",\n  },\n\n  {\n    name: \"AntMiner D5/K5\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"1540\",\n  },\n\n  {\n    name: \"AntMiner L3+\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"800\",\n  },\n\n  {\n    name: \"AntMiner L7\",\n    plugType: \"C13\",\n    plugQty: \"2\",\n    minerWatts: \"3400\",\n  },\n\n  {\n    name: \"AntMiner L3++\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"1040\",\n  },\n  {\n    name: \"AntMiner S11/S15\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"1540\",\n  },\n\n  {\n    name: \"AntMiner S17/S17+\",\n    plugType: \"C13\",\n    plugQty: \"2\",\n    minerWatts: \"3100\",\n  },\n\n  {\n    name: \"AntMiner S17 Pro\",\n    plugType: \"C13\",\n    plugQty: \"2\",\n    minerWatts: \"2475\",\n  },\n\n  {\n    name: \"AntMiner S19/S19 Pro/S19j/S19k\",\n    plugType: \"C13\",\n    plugQty: \"2\",\n    minerWatts: \"3200\",\n  },\n\n  {\n    name: \"AntMiner S9\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"1150\",\n  },\n\n  {\n    name: \"AntMiner S9 SE\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"1250\",\n  },\n\n  {\n    name: \"AntMiner S9i\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"1340\",\n  },\n\n  {\n    name: \"Antminer T9/T15\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"1525\",\n  },\n\n  {\n    name: \"Antminer T17/T17e\",\n    plugType: \"C13\",\n    plugQty: \"2\",\n    minerWatts: \"3000\",\n  },\n\n  {\n    name: \"Antminer T17+\",\n    plugType: \"C13\",\n    plugQty: \"2\",\n    minerWatts: \"3200\",\n  },\n\n  {\n    name: \"Antminer Z11\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"1420\",\n  },\n\n  {\n    name: \"Baikal BK-G28\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"1300\",\n  },\n\n  {\n    name: \"Baikal Giant X10\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"650\",\n  },\n\n  {\n    name: \"Avalon 1047\",\n    plugType: \"C19\",\n    plugQty: \"1\",\n    minerWatts: \"2400\",\n  },\n\n  {\n    name: \"Avalon 1066\",\n    plugType: \"C19\",\n    plugQty: \"1\",\n    minerWatts: \"3220\",\n  },\n\n  {\n    name: \"Avalon 7\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"1140\",\n  },\n\n  {\n    name: \"Avalon 921\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"1690\",\n  },\n\n  {\n    name: \"Dayun Zig Z1\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"1200\",\n  },\n\n  {\n    name: \"Ebang Ebit E12/E12+\",\n    plugType: \"C19\",\n    plugQty: \"1\",\n    minerWatts: \"2500\",\n  },\n\n  {\n    name: \"FusionSillicon X1\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"1110\",\n  },\n\n  {\n    name: \"FusionSillicon X7\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"1400\",\n  },\n\n  {\n    name: \"Innosilicon A4\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"1040\",\n  },\n\n  {\n    name: \"Innosilicon A5/A9+\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"1485\",\n  },\n\n  {\n    name: \"Innosilicon A9\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"620\",\n  },\n\n  {\n    name: \"Innosilicon D9+\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"1220\",\n  },\n\n  {\n    name: \"Innosilicon T3 50T-57T\",\n    plugType: \"C19\",\n    plugQty: \"1\",\n    minerWatts: \"3200\",\n  },\n\n  {\n    name: \"Innosilicon T3 39T-43T\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"2077\",\n  },\n\n  {\n    name: \"Whatsminer M10\",\n    plugType: \"C13\",\n    plugQty: \"1\",\n    minerWatts: \"2120\",\n  },\n\n  {\n    name: \"Whatsminer M10S\",\n    plugType: \"C19\",\n    plugQty: \"1\",\n    minerWatts: \"3500\",\n  },\n\n  {\n    name: \"Whatsminer M20S/M21S\",\n    plugType: \"C19\",\n    plugQty: \"1\",\n    minerWatts: \"3350\",\n  },\n\n  {\n    name: \"Whatsminer M30S/M31S\",\n    plugType: \"C19\",\n    plugQty: \"1\",\n    minerWatts: \"3250\",\n  },\n\n  {\n    name: \"StrongU STU-U6\",\n    plugType: \"C19\",\n    plugQty: \"1\",\n    minerWatts: \"2175\",\n  },\n];\n\nexport function getMiners() {\n  return miners;\n}\n\nexport function getMiner(name) {\n  const miner = miners.filter((m) => m.name === name);\n  return miner;\n}\n","import React from \"react\";\nimport { Box, RadioButtonGroup } from \"grommet\";\n\nexport const PlugQty = (props) => {\n  return (\n    <RadioButtonGroup\n      name=\"plugQty\"\n      direction=\"row\"\n      options={[\n        { label: \"1 Plug\", value: \"1\" },\n        { label: \"2 Plugs\", value: \"2\" },\n      ]}\n      value={props.value}\n      onChange={(e) => props.onChange(e)}\n      {...props}\n    />\n  );\n};\n\nexport const PlugType = (props) => {\n  return (\n    <RadioButtonGroup\n      name=\"plugType\"\n      direction=\"row\"\n      options={[\n        { label: \"C13\", value: \"C13\" },\n        { label: \"C19\", value: \"C19\" },\n      ]}\n      value={props.value}\n      onChange={(e) => props.onChange(e)}\n      {...props}\n    />\n  );\n};\n\nexport const Service = (props) => {\n  return (\n    <React.Fragment>\n      <Box direction=\"row\">\n        <RadioButtonGroup\n          name=\"serviceString\"\n          direction=\"column\"\n          pad=\"small\"\n          options={[\n            {\n              label: \"Single Phase 120/240\",\n              value: \"SinglePhase_240\",\n            },\n            { label: \"Three Phase 208\", value: \"ThreePhase_208\" },\n            { label: \"Three Phase 240\", value: \"ThreePhase_240\" },\n            { label: \"Three Phase 415\", value: \"ThreePhase_415\" },\n          ]}\n          value={props.value}\n          onChange={(e) => props.onChange(e)}\n          {...props}\n        />\n        <RadioButtonGroup\n          name=\"serviceString\"\n          direction=\"column\"\n          pad=\"small\"\n          options={[\n            { label: \"Three Phase 480\", value: \"ThreePhase_480\" },\n            {\n              label: \"ThreePhase_5000+\",\n              value: \"Three_Phase_5000+\",\n            },\n            { label: \"IDK\", value: \"IDK_IDK\" },\n          ]}\n          value={props.value}\n          onChange={(e) => props.onChange(e)}\n          {...props}\n        />\n      </Box>\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { Button, Box, TextInput } from \"grommet\";\nimport { PlugQty, PlugType } from \"./Radio\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Select } from \"grommet\";\nimport _ from \"lodash\";\nimport { getMiners } from \"../miners\";\nimport react from \"react\";\n\nconst Step1 = ({\n  error,\n  minerWatts,\n  plugQty,\n  plugType,\n  selectedMiner,\n  handleChange,\n  selectMiner,\n  handleSubmit,\n}) => {\n  return (\n    <react.Fragment>\n      <Box direction=\"row-responsive\" justify=\"around\" id=\"row1\">\n        <Box align=\"left\" id=\"r1c1\" width=\"250px\">\n          <h3>Miner Watts</h3>\n          <TextInput\n            name=\"minerWatts\"\n            onChange={handleChange}\n            value={minerWatts}\n          />\n          {error && <div className=\"alert alert-danger\">{error}</div>}\n          <h3># Of Power Inputs</h3>\n          <PlugQty value={plugQty} onChange={(e) => handleChange(e)} />\n          <h3>Plug Type</h3>\n          <PlugType value={plugType} onChange={(e) => handleChange(e)} />\n        </Box>\n        <Box direction=\"column\" align=\"center\" id=\"r1c2\">\n          <Divider\n            orientation=\"verticle\"\n          />\n          <h1>OR</h1>\n          <Divider\n            orientation=\"verticle\"\n          />\n        </Box>\n        <Box align=\"right\" id=\"r1c3\" width=\"250px\">\n          <h3>Choose from a list</h3>\n          <Select\n            options={_.map(getMiners(), \"name\")}\n            value={selectedMiner}\n            onChange={(e) => selectMiner(e)}\n            dropHeight=\"small\"\n          />\n        </Box>\n      </Box>\n      <Box id=\"row2\">\n        <Box align=\"center\">\n          <Button\n            primary\n            style={{ margin: \"50px\" }}\n            size=\"large\"\n            label=\"Next\"\n            onClick={handleSubmit}\n          />\n        </Box>\n      </Box>\n    </react.Fragment>\n  );\n};\n\nexport default Step1;\n","import React from \"react\";\nimport { Box, RadioButtonGroup } from \"grommet\";\n\nexport const PlugQty = (props) => {\n  return (\n    <RadioButtonGroup\n      name=\"plugQty\"\n      direction=\"row\"\n      options={[\n        { label: \"1 Plug\", value: \"1\" },\n        { label: \"2 Plugs\", value: \"2\" },\n      ]}\n      value={props.value}\n      onChange={(e) => props.onChange(e)}\n      {...props}\n    />\n  );\n};\n\nexport const PlugType = (props) => {\n  return (\n    <RadioButtonGroup\n      name=\"plugType\"\n      direction=\"row\"\n      options={[\n        { label: \"C13\", value: \"C13\" },\n        { label: \"C19\", value: \"C19\" },\n      ]}\n      value={props.value}\n      onChange={(e) => props.onChange(e)}\n      {...props}\n    />\n  );\n};\n\nexport const Service = (props) => {\n  return (\n    <React.Fragment>\n      <Box direction=\"row\">\n        <RadioButtonGroup\n          name=\"serviceString\"\n          direction=\"column\"\n          pad=\"small\"\n          options={[\n            {\n              label: \"Single Phase 120/240\",\n              value: \"SinglePhase_240\",\n            },\n            { label: \"Three Phase 208\", value: \"ThreePhase_208\" },\n            { label: \"Three Phase 240\", value: \"ThreePhase_240\" },\n            { label: \"Three Phase 415\", value: \"ThreePhase_415\" },\n          ]}\n          value={props.value}\n          onChange={(e) => props.onChange(e)}\n          {...props}\n        />\n        <RadioButtonGroup\n          name=\"serviceString\"\n          direction=\"column\"\n          pad=\"small\"\n          options={[\n            { label: \"Three Phase 480\", value: \"ThreePhase_480\" },\n            {\n              label: \"ThreePhase_5000+\",\n              value: \"Three_Phase_5000+\",\n            },\n            { label: \"IDK\", value: \"IDK_IDK\" },\n          ]}\n          value={props.value}\n          onChange={(e) => props.onChange(e)}\n          {...props}\n        />\n      </Box>\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport react from \"react\";\nimport { Box, Button, TextInput } from \"grommet\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Service } from \"./radio\";\n\nconst Step2 = ({\n  errors,\n  minerQty,\n  handleChange,\n  serviceString,\n  serviceAmps,\n  handleSubmit,\n}) => {\n  return (\n    <react.Fragment>\n      <Box direction=\"row-responsive\" justify=\"around\" id=\"row1\">\n        <Box align=\"left\" id=\"r1c1\" width=\"250px\">\n          <h3>Miner Qty</h3>\n          <TextInput name=\"minerQty\" onChange={handleChange} value={minerQty} />\n          {errors.minerQty && (\n            <div className=\"alert alert-danger\">{errors.minerQty}</div>\n          )}\n        </Box>\n        <Box direction=\"column\" align=\"center\" id=\"r1c2\">\n          <Divider\n            orientation=\"verticle\"\n            style={{ height: \"100%\", width: \"1px\" }}\n          />\n        </Box>\n        <Box align=\"left\" id=\"r1c3\" width=\"500px\">\n          <h3>Service</h3>\n          <Service value={serviceString} onChange={(e) => handleChange(e)} />\n          {errors.serviceString && (\n            <div className=\"alert alert-danger\">{errors.serviceString}</div>\n          )}\n          {/* <Box>\n        <h3>Service Amps Available</h3>\n        <p>(leave blank if unknown)</p>\n        <TextInput\n          name=\"serviceAmps\"\n          onChange={handleChange}\n          value={serviceAmps}\n        />\n        {errors.serviceAmps && (\n          <div className=\"alert alert-danger\">{errors.serviceAmps}</div>\n        )}\n        </Box> */}\n        </Box>\n      </Box>\n      <Box id=\"row2\">\n        <Box align=\"center\">\n          <Button\n            primary\n            style={{ margin: \"50px\" }}\n            size=\"large\"\n            label=\"Next\"\n            onClick={handleSubmit}\n          />\n        </Box>\n      </Box>\n    </react.Fragment>\n  );\n};\n\nexport default Step2;\n","const pdus = [\n  {\n    name: \"30A_240V_PDU_C13\",\n    displayName: \"30A 240V PDU 4x C13\",\n    maxAmps: 30,\n    plugQty: 4,\n    cost: 99.45,\n    shopifyId: 39531795349579,\n    specSheetUrl:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/30A_240V_PDU_4x_C13_Product_Sheet.pdf?v=1636144983\",\n    image:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/PUL6-233040_250px.png?v=1636057887\",\n  },\n  {\n    name: \"30A_240V_PDU_C19\",\n    displayName: \"30A 240V PDU 2x C19\",\n    maxAmps: 30,\n    plugQty: 2,\n    cost: 99.45,\n    shopifyId: 39531799740491,\n    specSheetUrl:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/30A_240V_PDU_2x_C19_Product_Sheet.pdf?v=1636197232\",\n    image:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/PUL6-239020_250px.png?v=1636057888\",\n  },\n  {\n    name: \"50A_240V_PDU_C13\",\n    displayName: \"50A 240V PDU 8x C13\",\n    maxAmps: 50,\n    plugQty: 8,\n    cost: 174.5,\n    shopifyId: 39500973637707,\n    specSheetUrl:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/50A_240V_PDU_8x_C13_Product_Sheet.pdf?v=1636197494\",\n    image:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/PU06-253080_250px.png?v=1636057888\",\n  },\n  {\n    name: \"50A_240V_PDU_C19\",\n    displayName: \"50A 240V PDU 4x C19\",\n    maxAmps: 50,\n    plugQty: 4,\n    cost: 174.5,\n    shopifyId: 39500972228683,\n    specSheetUrl:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/50A_240V_PDU_4x_C19_Product_Sheet.pdf?v=1636197746\",\n    image:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/PU06-259040_250px.png?v=1636058518\",\n  },\n  {\n    name: \"50A_240V_PDU_Panel\",\n    displayName: \"50A 240V PDU 4x C19\",\n    maxAmps: 50,\n    plugs: { c19: 4, c13: 6 },\n    cost: 0,\n  },\n  {\n    name: \"20A_240V_PDU_Panel\",\n    displayName: \"\",\n    maxAmps: 20,\n    plugs: { c19: 1, c13: 2 },\n    cost: 0,\n  },\n];\n\nexport function getPdus() {\n  return pdus;\n}\nexport function getPdu(pdu) {\n  return pdus.filter((p) => p.name === pdu)[0];\n}\n","import { getPdus } from \"./pdus\";\nconst pdus = getPdus();\nconst panels = [\n  {\n    name: \"20KW_240V_ASIC_Mining_Panel\",\n    input: { maxVoltage: 240, phase: 1, wire: 2, maxAmps: 125 },\n    output: {\n      maxVoltage: 240,\n      maxAmps: 125,\n      continuousAmps: 100,\n      continuousSinglePhaseAmps: 100,\n      maxSinglePhaseAmps: 125,\n      phase: 1,\n      wire: 2,\n    },\n    pdus: [\n      {\n        name: pdus.filter((p) => p.name === \"50A_240V_PDU_Panel\")[0].name,\n        count: 3,\n      },\n    ],\n    cost: 544.95,\n    shopifyId: 28597116960843,\n    image:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/AS02-253120_250px.png?v=1636063168\",\n    specSheetUrl:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/20KW_240V_ASIC_Mining_Panel_Product_Sheet.pdf?v=1636412871\",\n  },\n  {\n    name: \"50KW_240V_ASIC_Mining_Panel\",\n    input: { maxVoltage: 240, phase: 3, wire: 4, maxAmps: 200 },\n    output: {\n      maxVoltage: 240,\n      maxAmps: 200,\n      continuousAmps: 160,\n      continuousSinglePhaseAmps: 277,\n      maxSinglePhaseAmps: 346,\n      phase: 3,\n      wire: 3,\n    },\n    pdus: [\n      {\n        name: pdus.filter((p) => p.name === \"50A_240V_PDU_Panel\")[0].name,\n        count: 7,\n      },\n    ],\n    cost: 1894.95,\n    shopifyId: 28597452505163,\n    image:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/AS05-3532A0_250px.png?v=1636063394\",\n    specSheetUrl:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/50KW_240V_ASIC_Mining_Panel_Product_Sheet.pdf?v=1636412857\",\n  },\n  {\n    name: \"50KW_480V_ASIC_Mining_Panel\",\n    input: { maxVoltage: 480, phase: 3, wire: 3, maxAmps: 90 },\n    output: {\n      maxVoltage: 240,\n      maxAmps: 180,\n      continuousAmps: 160,\n      continuousSinglePhaseAmps: 277,\n      maxSinglePhaseAmps: 346,\n      phase: 3,\n      wire: 4,\n    },\n    pdus: [\n      {\n        name: pdus.filter((p) => p.name === \"50A_240V_PDU_Panel\")[0].name,\n        count: 7,\n      },\n    ],\n    cost: 4195.45,\n    shopifyId: 28597459845195,\n    image:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/50KW_Industrial_ASIC_Mining_Panel_40X240V_Output_Compressed.png?v=1613718491\",\n    specSheetUrl:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/50KW_480V_ASIC_Mining_Panels_Product_Sheet.pdf?v=1636412845\",\n  },\n  {\n    name: \"100KW_240V_ASIC_Mining_Panel\",\n    input: { maxVoltage: 240, phase: 3, wire: 4, maxAmps: 400 },\n    output: {\n      maxVoltage: 240,\n      maxAmps: 400,\n      continuousAmps: 320,\n      continuousSinglePhaseAmps: 554,\n      maxSinglePhaseAmps: 692,\n      phase: 3,\n      wire: 4,\n    },\n    pdus: [\n      {\n        name: pdus.filter((p) => p.name === \"50A_240V_PDU_Panel\")[0].name,\n        count: 14,\n      },\n    ],\n    cost: 3444.95,\n    shopifyId: 28597477343307,\n    image:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/AS10-353540_250px.png?v=1636062298\",\n    specSheetUrl:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/100KW_240V_ASIC_Mining_Panel_Product_Sheet.pdf?v=1636412761\",\n  },\n  {\n    name: \"100KW_480V_ASIC_Mining_Panel\",\n    input: { maxVoltage: 480, phase: 3, wire: 3, maxAmps: 200 },\n    output: {\n      maxVoltage: 240,\n      maxAmps: 360,\n      continuousAmps: 320,\n      continuousSinglePhaseAmps: 554,\n      maxSinglePhaseAmps: 692,\n      phase: 3,\n      wire: 4,\n    },\n    pdus: [\n      {\n        name: pdus.filter((p) => p.name === \"50A_240V_PDU_Panel\")[0].name,\n        count: 14,\n      },\n    ],\n    cost: 7795,\n    shopifyId: 28597500903499,\n    image:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/50KW_Industrial_ASIC_Mining_Panel_40X240V_Output_Compressed.png?v=1613718491\",\n    specSheetUrl:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/100KW_480V_ASIC_Mining_Panels_Product_Sheet.pdf?v=1636413454\",\n  },\n  {\n    name: \"100KW_415V_ASIC_Mining_Panel\",\n    input: { maxVoltage: 415, phase: 3, wire: 4, maxAmps: 225 },\n    output: {\n      maxVoltage: 415,\n      maxAmps: 225,\n      continuousAmps: 180,\n      continuousSinglePhaseAmps: 479,\n      maxSinglePhaseAmps: 599,\n      phase: 3,\n      wire: 4,\n    },\n    pdus: [\n      {\n        name: pdus.filter((p) => p.name === \"20A_240V_PDU_Panel\")[0].name,\n        count: 34,\n      },\n    ],\n    cost: 3295.0,\n    shopifyId: 39419804516427,\n    image:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/100KW_240V_ASIC_Mining_Panel.png?v=1635193317\",\n    specSheetUrl:\n      \"https://cdn.shopify.com/s/files/1/0246/7178/0939/files/125KW_415V_ASIC_Mining_Panel_84x_C13.pdf?v=1636413971\",\n  },\n];\n\nexport function getPanels() {\n  return panels;\n}\n\nexport function getPanel(panelName) {\n  return panels.filter((p) => p.name === panelName);\n}\n","import React from \"react\";\nimport {\n  Box,\n  Card,\n  CardBody,\n  CardHeader,\n  CardFooter,\n  Grid,\n  Heading,\n  Image,\n  Text,\n  TextInput,\n} from \"grommet\";\nimport { getPanel } from \"../panels\";\nimport react from \"react\";\nimport { getPdus } from \"../pdus\";\n\nconst handleAddToCart = (id, qty) => {\n  const urlBase =\n    \"https://asic-mining-panels.myshopify.com/cart/\" + id + \":\" + qty;\n  window.open(urlBase, \"_blank\").focus();\n};\n\nconst Step3 = (props) => {\n  props.log();\n  let panelsToDisplay = [];\n  let pdusToDisplay = getPdus().filter((p) => p.name.includes(props.plugType));\n  for (const panel in props.numberOfPanels) {\n    panelsToDisplay.push(getPanel(panel)[0]);\n  }\n  if (props.servicePhase === 1)\n    //Display only Single Phase options\n    panelsToDisplay = panelsToDisplay.filter((p) => p.input.phase === 1);\n  else if (props.serviceVoltage <= 240)\n    panelsToDisplay = panelsToDisplay.filter((p) => p.input.maxVoltage <= 240);\n  else if (props.serviceVoltage === 480)\n    panelsToDisplay = panelsToDisplay.filter((p) => p.input.maxVoltage === 480);\n  else if (props.serviceVoltage === 415)\n    panelsToDisplay = panelsToDisplay.filter((p) => p.input.maxVoltage === 415);\n  return (\n    <react.Fragment>\n      <Box direction=\"row\" justify=\"center\" id=\"step3row1\">\n        <Box pad=\"small\">\n          <h3>Miner Qty</h3>\n          <TextInput\n            name=\"minerQty\"\n            onChange={props.handleChange}\n            value={props.minerQty}\n          />\n          {props.errors.minerQty && (\n            <div className=\"alert alert-danger\">{props.errors.minerQty}</div>\n          )}\n        </Box>\n        <Box pad=\"small\">\n          <h3>Miner Watts</h3>\n          <TextInput\n            name=\"minerWatts\"\n            onChange={props.handleChange}\n            value={props.minerWatts}\n          />\n          {props.errors.minerWatts && (\n            <div className=\"alert alert-danger\">{props.errors.minerWatts}</div>\n          )}\n        </Box>\n        <Box pad=\"small\">\n          <h3>Plug Type - {props.plugType}</h3>\n        </Box>\n        {props.numberOfPdus[\"50A_240V_PDU\"] === Infinity ? (\n          <Box>\n            <p>\n              Whoops! It looks like your Miner is a bit unique... But don't\n              worry!\n              <br />\n              No Matter the situation, We will get you powered up. Contact us.\n            </p>\n          </Box>\n        ) : (\n          \"\"\n        )}\n      </Box>\n      <Box pad=\"small\" id=\"row2\">\n        <Grid columns=\"small\" gap=\"small\">\n          {pdusToDisplay.map((pdu) => (\n            <Card\n              className=\"product\"\n              width=\"250px\"\n              height=\"450px\"\n              onClick={() => console.log(\"Clicked!\")}\n            >\n              <CardHeader justify=\"end\">\n                <span class=\"badge bg-danger\">\n                  QTY {props.numberOfPdus[pdu.name]}\n                </span>\n              </CardHeader>\n              <CardBody>\n                <Image\n                  width=\"200px\"\n                  height=\"200px\"\n                  alignSelf=\"center\"\n                  src={pdu.image}\n                />\n                <Box pad=\"small\" alignSelf=\"center\">\n                  <Heading level=\"4\">{pdu.displayName}</Heading>\n                  <Text>\n                    <sup>$</sup>\n                    {pdu.cost.toFixed(2).toLocaleString(undefined)}\n                    /ea\n                  </Text>\n                </Box>\n                <Grid pad=\"xsmall\" columns={[\"3/4\", \"flex\"]}>\n                  <Text size=\"xsmall\" alignSelf=\"start\">\n                    {/* 0,0 */}\n                    Cost for {props.numberOfPdus[pdu.name]} PDU(s)\n                  </Text>\n                  <Text size=\"xsmall\">\n                    {/* 0,1 */}\n                    <sup>$</sup>\n                    {props.pduCost[pdu.name]\n                      .toFixed(2)\n                      .toLocaleString(undefined)}\n                  </Text>\n                  <Text size=\"xsmall\" alignSelf=\"start\">\n                    Total Miners Supported\n                  </Text>\n                  {/* 1,0 */}\n                  <Text size=\"xsmall\">\n                    {/* 1,1 */}\n                    {Math.floor(\n                      props.numberOfPdus[pdu.name] *\n                        props.numberOfMinersPerPdu[pdu.name]\n                    )}\n                  </Text>\n                  {props.splitters[pdu.name] ? (\n                    <react.Fragment>\n                      <Text size=\"xsmall\" alignSelf=\"start\">\n                        Splitters Needed\n                      </Text>\n                      {/* 2,0 */}\n                      <Text size=\"xsmall\">{props.splitters[pdu.name]}</Text>\n                      {/* 2,1 */}\n                    </react.Fragment>\n                  ) : (\n                    \"\"\n                  )}\n                </Grid>\n              </CardBody>\n              <CardFooter\n                direction=\"row\"\n                justify=\"evenly\"\n                height=\"100px\"\n                gap=\"none\"\n              >\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  style={{ width: \"45%\" }}\n                  onClick={() =>\n                    handleAddToCart(pdu.shopifyId, props.numberOfPdus[pdu.name])\n                  }\n                >\n                  Buy\n                </button>\n                <button\n                  onClick={() => {\n                    window.open(pdu.specSheetUrl, \"_blank\").focus();\n                  }}\n                  className=\"btn btn-secondary\"\n                  style={{ width: \"45%\" }}\n                >\n                  Specs\n                </button>\n              </CardFooter>\n            </Card>\n          ))}\n          {panelsToDisplay.map((panel) => (\n            <Card\n              className=\"product\"\n              width=\"250px\"\n              height=\"450px\"\n              onClick={() => console.log(\"Clicked!\")}\n            >\n              <CardHeader justify=\"end\">\n                <span class=\"badge bg-danger\">\n                  QTY {props.numberOfPanels[panel.name]}\n                </span>\n              </CardHeader>\n              <CardBody>\n                <Image\n                  width=\"200px\"\n                  height=\"200px\"\n                  alignSelf=\"center\"\n                  src={panel.image}\n                />\n                <Box wrap=\"anywhere\" pad=\"small\" alignSelf=\"center\">\n                  <Heading level=\"4\">{panel.name.replaceAll(\"_\", \" \")}</Heading>\n                  <Text>\n                    <sup>$</sup>\n                    {panel.cost.toFixed(2).toLocaleString(undefined)}\n                    /ea\n                  </Text>\n                </Box>\n                <Grid pad=\"xsmall\" columns={[\"3/4\", \"flex\"]}>\n                  <Text size=\"xsmall\" alignSelf=\"start\">\n                    {/* 0,0 */}\n                    Cost for {props.numberOfPanels[panel.name]} Panel(s)\n                  </Text>\n                  <Text size=\"xsmall\">\n                    {/* 0,1 */}\n                    <sup>$</sup>\n                    {(props.numberOfPanels[panel.name] * panel.cost)\n                      .toFixed(2)\n                      .toLocaleString(undefined)}\n                  </Text>\n                  <Text size=\"xsmall\" alignSelf=\"start\">\n                    Total Miners Supported\n                  </Text>\n                  {/* 1,0 */}\n                  <Text size=\"xsmall\">\n                    {/* 1,1 */}{\" \"}\n                    {/* TODO: I THINK THIS CONTAINS AN ERROR. NEED TO CALCULATE MINERS PER PANEL AND SEND HERE AND OUTPUT THAT NUMBER ERROR ERROR ERROR!!!!!!!!!!*/}\n                    {props.numberOfMinersPerPanel[panel.name]}\n                    {/* TODO: I THINK THIS CONTAINS AN ERROR. NEED TO CALCULATE MINERS PER PANEL AND SEND HERE AND OUTPUT THAT NUMBER ERROR ERROR ERROR!!!!!!!!!!*/}\n                  </Text>\n                  {props.splitters[panel.name + panel.pdus[0].name] > 0 ? (\n                    <react.Fragment>\n                      <Text size=\"xsmall\" alignSelf=\"start\">\n                        Splitters Needed\n                      </Text>\n                      {/* 2,0 */}\n                      <Text size=\"xsmall\">\n                        {props.splitters[panel.name + panel.pdus[0].name]}\n                      </Text>\n                      {/* 2,1 */}\n                    </react.Fragment>\n                  ) : (\n                    \"\"\n                  )}\n                </Grid>\n              </CardBody>\n              <CardFooter\n                direction=\"row\"\n                justify=\"evenly\"\n                height=\"100px\"\n                gap=\"none\"\n              >\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  style={{ width: \"45%\" }}\n                  onClick={() =>\n                    handleAddToCart(\n                      panel.shopifyId,\n                      props.numberOfPanels[panel.name]\n                    )\n                  }\n                >\n                  Buy\n                </button>\n                <button\n                  onClick={() => {\n                    window.open(panel.specSheetUrl, \"_blank\").focus();\n                  }}\n                  className=\"btn btn-secondary\"\n                  style={{ width: \"45%\" }}\n                >\n                  Specs\n                </button>\n              </CardFooter>\n            </Card>\n          ))}\n        </Grid>\n      </Box>\n    </react.Fragment>\n  );\n};\n\nexport default Step3;\n","import React from \"react\";\nimport { Box } from \"grommet\";\nimport { getMiner } from \"../miners\";\nimport Step1 from \"./step1\";\nimport Step2 from \"./step2\";\nimport Step3 from \"./step3\";\nimport Joi from \"joi\";\nimport { getPdus } from \"../pdus\";\nimport { getPanels } from \"../panels\";\n\nclass Calculator extends React.Component {\n  sqrt3 = 1.732;\n  state = {\n    step: 1,\n    plugQty: \"1\",\n    plugType: \"C13\",\n    minerWatts: \"\",\n    minerQty: undefined,\n    electricalBudget: undefined,\n    selectedMiner: \"\",\n    serviceString: \"\",\n    serviceVoltage: undefined,\n    servicePhase: undefined,\n    numberOfPdus: {},\n    numberOfPanels: {},\n    numberOfMinersPerPdu: undefined,\n    splitters: undefined,\n    pduCost: {},\n    serviceAmps: undefined,\n    serviceIDK: false,\n    errors: {},\n    totalPower: undefined,\n    singlePhaseAmps: undefined,\n  };\n  schemaStep1 = Joi.object({\n    minerWatts: Joi.number().integer().required().label(\"Miner Watts\"),\n  });\n  schemaStep2 = Joi.object({\n    minerQty: Joi.number().integer().required(),\n    serviceString: Joi.string().required().label(\"Service\"),\n  }).messages({\n    \"object.missing\": \"You must fill out at least one of these fields.\",\n  });\n  schemaStep3 = Joi.object({\n    minerQty: Joi.number().integer().required().label(\"Miner Qty\"),\n    minerWatts: Joi.number().integer().required().label(\"Miner Watts\"),\n  });\n\n  log = () => {\n    var xhttp = new XMLHttpRequest();\n    xhttp.open(\"POST\", \"http://calc.asicminingpanels.com/log\");\n    xhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n    xhttp.send(\"data=\" + JSON.stringify(this.state));\n  };\n\n  handleChange = async (e) => {\n    let state = { ...this.state };\n    state[e.target.name] = e.target.value;\n    if (state.minerQty === \"\" && state.step < 3) state.minerQty = undefined;\n    if (state.electricalBudget === \"\") state.electricalBudget = undefined;\n    if (state.serviceAmps === \"\") state.serviceAmps = undefined;\n    await this.setState(state);\n    if (state.step === 3) this.handleSubmit();\n  };\n  selectMiner = (e) => {\n    const selectedMiner = e.option;\n    let state = { ...this.state };\n    if (selectedMiner === \"\") return;\n    else state.selectedMiner = selectedMiner;\n    const { plugQty, plugType, minerWatts } = getMiner(selectedMiner)[0];\n    state.plugQty = plugQty;\n    state.plugType = plugType;\n    state.minerWatts = minerWatts;\n    this.setState(state);\n  };\n  handleSubmit = async () => {\n    let step = this.state.step;\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n    if (step < 3) step = step + 1;\n    if (step === 3) {\n      const state = this.calculate();\n      state.step = 3;\n      this.setState(state);\n    } else this.setState({ step });\n  };\n  validate = () => {\n    const errors = {};\n    let error = {};\n    if (this.state.step === 1)\n      error = this.schemaStep1.validate({\n        minerWatts: this.state.minerWatts,\n      });\n    if (this.state.step === 2)\n      error = this.schemaStep2.validate({\n        minerQty: this.state.minerQty,\n        serviceString: this.state.serviceString,\n      });\n    if (this.state.step === 3)\n      error = this.schemaStep3.validate({\n        minerQty: this.state.minerQty,\n        minerWatts: this.state.minerWatts,\n      });\n    if (error.error) {\n      errors[\n        error.error.details[0].path[0]\n          ? error.error.details[0].path[0]\n          : \"general\"\n      ] = error.error.details[0].message;\n    } else return null;\n    return errors;\n  };\n\n  calculate = () => {\n    const state = { ...this.state };\n    //First check all variables to make sure they are valid\n    //Convert serviceString into usable shit\n    const serviceArray = state.serviceString.split(\"_\");\n    if (serviceArray[0] === \"SinglePhase\") state.servicePhase = 1;\n    else if (serviceArray[0] === \"ThreePhase\") state.servicePhase = 3;\n    else state.servicePhase = undefined;\n    if (serviceArray[1] !== \"IDK\")\n      state.serviceVoltage = parseInt(serviceArray[1]);\n    else state.serviceVoltage = 240;\n\n    state.singlePhaseAmps = this.calculateSinglePhaseAmps(\n      state.minerQty,\n      state.minerWatts,\n      state.serviceVoltage\n    );\n    state.totalPower = Math.ceil(state.minerQty * state.minerWatts);\n\n    const result = this.calculatePdu(\n      state.minerWatts,\n      state.minerQty,\n      state.plugQty,\n      state.plugType,\n      state.serviceVoltage\n    );\n    state.numberOfPdus = result.numberOfPdus;\n    state.pduCost = result.pduCost;\n    state.splitters = result.splitters;\n    state.numberOfMinersPerPdu = result.numberOfMinersPerPdu;\n    const result2 = this.calculatePanel(\n      state.numberOfPdus,\n      state.splitters,\n      state.minerQty,\n      state.plugQty,\n      state.minerWatts,\n      state.serviceVoltage,\n      state.numberOfMinersPerPdu\n    );\n    state.numberOfMinersPerPanel = result2.numberOfMinersPerPanel;\n    state.numberOfPanels = result2.numberOfPanels;\n    return state;\n  };\n\n  calculatePdu = (minerWatts, minerQty, plugQty, plugType, serviceVoltage) => {\n    const numberOfPdus = {};\n    const numberOfMinersPerPduPowerwise = {};\n    const numberOfMinersPerPduPlugwise = {};\n    const potentialAdditionalMinersPerPdu = {};\n    const numberOfMinersPerPdu = {};\n    const splitters = {};\n    const continousLoadFactor = 0.8;\n    const pduCost = {};\n    const pdus = getPdus();\n    let minerAmps;\n    //calculate the number of pdus needed amps wise\n    for (let pdu of pdus) {\n      if (plugQty === \"2\")\n        numberOfMinersPerPduPowerwise[pdu.name] =\n          Math.floor(\n            ((pdu.maxAmps *\n              continousLoadFactor *\n              (serviceVoltage < 240 ? serviceVoltage : 240)) /\n              minerWatts) *\n              2\n          ) / 2;\n      else\n        numberOfMinersPerPduPowerwise[pdu.name] = Math.floor(\n          (pdu.maxAmps *\n            continousLoadFactor *\n            (serviceVoltage < 240 ? serviceVoltage : 240)) /\n            minerWatts\n        );\n      if (plugType === \"C13\") {\n        //calculate whether or not splitters can be used...\n        minerAmps =\n          serviceVoltage < 240 ? minerWatts / serviceVoltage : minerWatts / 240;\n        if (10 /*The max amperage of a C13 cable*/ / minerAmps >= 2) {\n          //splitters can be used!\n          potentialAdditionalMinersPerPdu[pdu.name] =\n            numberOfMinersPerPduPowerwise[pdu.name] - pdu.plugQty;\n          if (potentialAdditionalMinersPerPdu[pdu.name] >= pdu.plugQty)\n            //Max it out ALL SPLITTERS GO\n            numberOfMinersPerPduPlugwise[pdu.name] = pdu.plugQty * 2;\n          else if (potentialAdditionalMinersPerPdu[pdu.name] >= 1)\n            numberOfMinersPerPduPlugwise[pdu.name] =\n              pdu.plugQty + potentialAdditionalMinersPerPdu[pdu.name];\n        }\n      }\n      if (numberOfMinersPerPduPlugwise[pdu.name]) {\n        //Plugs are the limiting Factor\n        numberOfPdus[pdu.name] = Math.ceil(\n          minerQty / numberOfMinersPerPduPlugwise[pdu.name]\n        );\n        splitters[pdu.name] =\n          minerQty * plugQty - numberOfPdus[pdu.name] * pdu.plugQty;\n        pduCost[pdu.name] = numberOfPdus[pdu.name] * pdu.cost; // + the cost of splitters if any\n        numberOfMinersPerPdu[pdu.name] = numberOfMinersPerPduPlugwise[pdu.name];\n      } else {\n        //Power is the limiting factor\n        numberOfPdus[pdu.name] = Math.ceil(\n          minerQty / numberOfMinersPerPduPowerwise[pdu.name]\n        );\n        pduCost[pdu.name] = numberOfPdus[pdu.name] * pdu.cost;\n        numberOfMinersPerPdu[pdu.name] =\n          numberOfMinersPerPduPowerwise[pdu.name];\n      }\n    }\n    return { numberOfPdus, splitters, pduCost, numberOfMinersPerPdu };\n  };\n\n  calculatePanel = (\n    numberOfPdus,\n    splitters,\n    minerQty,\n    plugQty,\n    minerWatts,\n    serviceVoltage,\n    numberOfMinersPerPdu\n  ) => {\n    const panels = getPanels();\n    const pdus = getPdus();\n    const numberOfPanels = {};\n    const numberOfMinersPerPanel = {};\n    for (const panel of panels) {\n      let panelsNeededByPduCount = Math.ceil(\n        numberOfPdus[panel.pdus[0].name] / panel.pdus[0].count\n      );\n      let panelsNeededByPower = Math.ceil(\n        (minerWatts * minerQty) /\n          (serviceVoltage <= 240 ? serviceVoltage : 240) /\n          panel.output.continuousSinglePhaseAmps\n      );\n      if (panelsNeededByPduCount >= panelsNeededByPower) {\n        numberOfPanels[panel.name] = panelsNeededByPduCount;\n      } else {\n        numberOfPanels[panel.name] = panelsNeededByPower;\n      }\n\n      //Calculate capacity\n      let numberOfMinersTemp1 = Math.floor(\n        numberOfPanels[panel.name] *\n          panel.pdus[0].count *\n          numberOfMinersPerPdu[panel.pdus[0].name]\n      );\n      let numberOfMinersTemp2 = Math.floor(\n        (numberOfPanels[panel.name] *\n          panel.output.continuousSinglePhaseAmps *\n          (serviceVoltage <= 240 ? serviceVoltage : 240)) /\n          minerWatts\n      );\n      if (numberOfMinersTemp1 <= numberOfMinersTemp2)\n        numberOfMinersPerPanel[panel.name] = numberOfMinersTemp1;\n      else numberOfMinersPerPanel[panel.name] = numberOfMinersTemp2;\n\n      //recalculate splitters\n      if (splitters[panel.pdus[0].name])\n        //if it was determined earlier that splitters could be used...\n        splitters[panel.name + panel.pdus[0].name] =\n          minerQty * plugQty -\n          pdus.filter((p) => p.name === panel.pdus[0].name)[0].plugs.c13 *\n            panel.pdus[0].count *\n            numberOfPanels[panel.name];\n    }\n    return { numberOfPanels, numberOfMinersPerPanel };\n  };\n\n  calculateSinglePhaseAmps = (minerQty, minerWatts, serviceVoltage) => {\n    if (serviceVoltage < 240) return (minerWatts / serviceVoltage) * minerQty;\n    else return Math.ceil((minerWatts / 240) * minerQty);\n  };\n\n  render() {\n    const {\n      electricalBudget,\n      errors,\n      plugQty,\n      plugType,\n      selectedMiner,\n      serviceString,\n      serviceAmps,\n      minerQty,\n      minerWatts,\n      step,\n      serviceVoltage,\n      servicePhase,\n      numberOfMinersPerPdu,\n      numberOfMinersPerPanel,\n    } = this.state;\n    return (\n      <Box align=\"center\">\n        <Box\n          id=\"calculator\"\n          width=\"1200px\"\n          margin=\"100px\"\n          round=\"20px\"\n          border={{\n            color: \"gray\",\n            size: \"xsmall\",\n            style: \"solid\",\n            side: \"all\",\n          }}\n        >\n          {step === 1 ? (\n            <h1 style={{ margin: \"20px\" }} align=\"center\">\n              Tell Us About Your Miners\n            </h1>\n          ) : step === 2 ? (\n            <h1 style={{ margin: \"20px\" }} className=\"m-2\" align=\"center\">\n              Miner and Service Info...\n            </h1>\n          ) : (\n            <h1 style={{ margin: \"20px\" }} className=\"m-2\" align=\"center\">\n              Results\n            </h1>\n          )}\n          {errors.general && (\n            <div className=\"alert alert-danger\">{errors.general}</div>\n          )}\n          {step === 1 && (\n            <Step1\n              minerWatts={minerWatts}\n              plugQty={plugQty}\n              plugType={plugType}\n              selectedMiner={selectedMiner}\n              handleChange={this.handleChange}\n              selectMiner={this.selectMiner}\n              error={errors.minerWatts}\n              handleSubmit={this.handleSubmit}\n            />\n          )}\n          {step === 2 && (\n            <Step2\n              minerQty={minerQty}\n              electricalBudget={electricalBudget}\n              handleChange={this.handleChange}\n              errors={errors}\n              serviceString={serviceString}\n              serviceAmps={serviceAmps}\n              handleSubmit={this.handleSubmit}\n            />\n          )}\n          {step === 3 && (\n            <Step3\n              {...this.state}\n              minerQty={minerQty}\n              minerWatts={minerWatts}\n              electricalBudget={electricalBudget}\n              handleChange={this.handleChange}\n              errors={errors}\n              serviceVoltage={serviceVoltage}\n              servicePhase={servicePhase}\n              numberOfMinersPerPdu={numberOfMinersPerPdu}\n              numberOfMinersPerPanel={numberOfMinersPerPanel}\n              plugType={plugType}\n              log={this.log}\n            />\n          )}\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Calculator;\n","import { Grommet } from \"grommet\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Calculator from \"./components/calculator\";\n\nconst theme = {\n  global: {\n    font: {\n      family: \"Roboto\",\n      size: \"18px\",\n      height: \"20px\",\n    },\n  },\n};\n\nfunction App() {\n  return (\n    <Grommet theme={theme}>\n      <Calculator />\n    </Grommet>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}